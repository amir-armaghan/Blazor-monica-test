@page "/file"
@using System.IO;
@using System.Linq;
@using MW.Blazor

@using blzZmq1.Services




<Tree Nodes="Items" ChildSelector="@(item => item.Childs)" @bind-SelectedNode="selectedNode" @bind-ExpandedNodes="ExpandedNodes" HasChildNodes="@(item => item.Childs?.Any() == true)">
    <TitleTemplate>@context.Text</TitleTemplate>
</Tree>

<p style="margin-top: 2rem">
    Selected: @selectedNode?.Text<br />
    Expanded: @string.Join(", ", ExpandedNodes.Select(i => i.Text))<br />
</p>

@code {

    public class Item
    {
        public string Text { get; set; }
        public IEnumerable<Item> Childs { get; set; }
    }

    IEnumerable<Item> Items = new[]
    {
        new Item { Text = "Item 1" },
        new Item {
            Text = "Item 2",
            Childs = new []
{
                new Item { Text = "Item 2.1" },
                new Item { Text = "Item 2.2", Childs = new []
        {
                        new Item { Text = "Item 2.2.1" },
                        new Item { Text = "Item 2.2.2" },
                        new Item { Text = "Item 2.2.3" },
                        new Item { Text = "Item 2.2.4" }

                    } },
                new Item { Text = "Item 2.3" },
                new Item { Text = "Item 2.4" }

            }},
        new Item { Text = "Item 3" },
        new Item {
            Text = "Item 4",
            Childs = new []
{
                new Item { Text = "Item 4.1" },
                new Item { Text = "Item 4.2", Childs = new []
    {
                    new Item { Text = "Item 4.2.1" },
                    new Item { Text = "Item 4.2.2" },
                    new Item { Text = "Item 4.2.3" },
                    new Item { Text = "Item 4.2.4" }
                } },
            new Item { Text = "Item 4.3" },
            new Item { Text = "Item 4.4" }

            } },
        new Item { Text = "Item 5" },
        new Item { Text = "Item 6" },
    };

    IList<Item> ExpandedNodes = new List<Item>();
    Item selectedNode;

    protected override void OnInitialized()
    {
        ExpandedNodes.Add(Items.Skip(1).First());
        ExpandedNodes.Add(Items.Skip(1).Take(1).First().Childs.Skip(1).First());
    }
}