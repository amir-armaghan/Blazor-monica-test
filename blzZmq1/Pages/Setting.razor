@page "/setting"
@using blzZmq1.Services
@using Core.Share

@inherits Shared.BasePage

@inject blzZmq1.Services.Github.IGithubService GithubService

<h3>Setting</h3>

<label for="basic-url">Your ZeroMQ server Address</label>
<div class="input-group mb-3">
    <div class="input-group-prepend">
        <span class="input-group-text" id="basic-addon3">Server Push Address:</span>
    </div>
    <input type="text" class="form-control" aria-describedby="basic-addon3" @bind="@UserSetting.ServerPushAddress" @onfocusout="UpdateLocalStorageSettingsAsync">
</div>
<div class="input-group mb-3">
    <div class="input-group-prepend">
        <span class="input-group-text" id="basic-addon3">Server Push Port:</span>
    </div>
    <input class="form-control" aria-describedby="basic-addon3" @bind="@UserSetting.ServerPushPort" @onfocusout="UpdateLocalStorageSettingsAsync">
</div>
<div class="input-group mb-3">
    <div class="input-group-prepend">
        <span class="input-group-text" id="basic-addon3">Server Pull Address:</span>
    </div>
    <input type="text" class="form-control" aria-describedby="basic-addon3" @bind="@UserSetting.ServerPullAddress" @onfocusout="UpdateLocalStorageSettingsAsync">
</div>
<div class="input-group mb-3">
    <div class="input-group-prepend">
        <span class="input-group-text" id="basic-addon3">Server Pull Port:</span>
    </div>
    <input type="number" class="form-control" aria-describedby="basic-addon3" @bind="UserSetting.ServerPullPort" @onfocusout="UpdateLocalStorageSettingsAsync">
</div>
<p> </p>
<label for="basic-url">Your gitHub authentication information</label>
<div class="input-group mb-3">
    <div class="input-group-prepend">
        <span class="input-group-text" id="basic-addon3">User Name:</span>
    </div>
    <input disabled type="text" class="form-control" aria-describedby="basic-addon3" @bind="UserSetting.GithubUserName" @onfocusout="UpdateLocalStorageSettingsAsync">
</div>
<div class="input-group mb-3">
    <div class="input-group-prepend">
        <span class="input-group-text" id="basic-addon3">Password:</span>
    </div>
    <input disabled type="password" class="form-control" aria-describedby="basic-addon3" @bind="UserSetting.GithubPassword" @onfocusout="UpdateLocalStorageSettingsAsync">
</div>
<div class="input-group mb-3">
    <div class="input-group-prepend">
        <span class="input-group-text" id="basic-addon3">Monica-Parameters path on github:</span>
    </div>
    @if (UserSetting.MonicaPathOnGitIsValid == false || UserSetting.MonicaResultsPathOnGithub == "") //show proper icon when is Not valid
    {
<div class="input-group-prepend tooltip2">
    <span class="input-group-text tooltip2" id="basic-addon3">&#9888;</span>
    <span class="tooltiptext">
        <strong>Only After logging-in:</strong> <br />
        Please enter your full github repository Address which contains "monica parameters" in its root <br />
        Do not add Slash (/) at the the end of this address. <br />
        After entering the path, click on "Validate the path" button.
    </span>
    <!--
        <span class="tooltiptext">
            <strong>Only After logging-in:</strong> <br />
            Please enter your github repository Address which contains "monica parameters" in its root <br />
            Do not add Slash (/) at the begining or at the end of this address. <br />
            After entering the path, click on "Validate the path" button.
        </span>
    -->
</div>
    }
    else // when path is valid
    {
        <div class="input-group-prepend">
            <span class="input-group-text" id="basic-addon3">&#10004;</span>
        </div>
    }
    <input type="text" class="form-control" aria-describedby="basic-addon3" @bind="UserSetting.MonicaResultsPathOnGithub" @onfocusout="@PathChangedAsync">
    <div class="input-group-prepend">
        <button class="btn btn-info btn-sm rounded-right" type="button" @onclick="GithubPathValidation">Validate the path</button>
    </div>
</div>

@*@if (UserSettingsService.MonicaPathOnGitIsValid == true)
    {
        <RadzenRadioButtonList @bind-Value="UserSettingsService.SaveResultInGit" TValue="Boolean" Orientation="Orientation.Vertical" Change="@((args) => Change(args))">
            <Items>
                <RadzenRadioButtonListItem Text="Save in my github (Good to have a history of my results)" Value=true />
                <RadzenRadioButtonListItem Text="Just show me the download link (I will manage how to keep it myself)" Value=false />
            </Items>
        </RadzenRadioButtonList>
    }
    else
    {
        UserSettingsService.SaveResultInGit = false;
        <RadzenRadioButtonList @bind-Value="UserSettingsService.SaveResultInGit" TValue="Boolean" Orientation="Orientation.Vertical" Change="@((args) => Change(args))">
            <Items>
                <span Style="color:#A0A0A0;">&#128280;  Save in my github (Good to have a history of my results)</span>
                <span style="color:#ff8080;">&nbsp; Enter and validate your github path above, to Enable this option</span>
                <RadzenRadioButtonListItem Text="Just show me the download link (I will manage how to keep it myself)" Value=false />
            </Items>
        </RadzenRadioButtonList>

    }*@
<!-- <button @onclick="Login"></button>
<p>Logged in: @result</p>-->
@code {

    Boolean value;

    void Change(bool value)
    {
        // do something
    }

    async Task GithubPathValidation()
    {
        if (!string.IsNullOrWhiteSpace(UserSetting.MonicaResultsPathOnGithub))
        {
            string repoPath = GithubService.GetRepoResultPath(UserSetting.MonicaResultsPathOnGithub);
            UserSetting.MonicaPathOnGitIsValid = GithubService.IsExistPath(UserSetting.MonicaResultsPathOnGithub, UserSetting.GithubUserName, UserSetting.GithubPassword, repoPath);
            await SaveUserSettingsInLocalStorageAsync();
        }
    }

    async Task PathChangedAsync()
    {
        UserSetting.MonicaPathOnGitIsValid = false;
        await SaveUserSettingsInLocalStorageAsync();
    }

    async Task UpdateLocalStorageSettingsAsync()
    {
        await SaveUserSettingsInLocalStorageAsync();
    }



}
