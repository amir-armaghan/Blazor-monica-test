@page "/jsonload"
@using blzZmq1.Services
@using System.Linq;
@using System.IO;
@using Newtonsoft.Json;
@inject IFileUpload fileUpload


<h3>Load JSON files</h3>
<h4>Read Json's content files from relative path</h4>
<button @onclick="ReadSimFile">sim_JSON</button><br />
<button @onclick="ReadSiteFile">site_JSON</button><br />
<button @onclick="ReadCropFile">crop_JSON</button>
<p class="fixwidth">@fileTextContents</p>

@code {

    string fileTextContents = "Loading";

    // In this component I tried to load jsons from files...
    // This Component is for test so I didn't create a service and repeated the following methods

    async Task ReadSimFile()
    {
        FileStream inputStream = new FileStream("Data/sim.json", FileMode.Open);

        using (var reader = new System.IO.StreamReader(inputStream))
        {

            fileTextContents = await reader.ReadToEndAsync();
           // object fileTextContents2 = JsonConvert.DeserializeObject(fileTextContents); // if I want to change the json to a .NET object
           
        }
    }
    async Task ReadSiteFile()
    {
        FileStream inputStream = new FileStream("Data/site.json", FileMode.Open);

        using (var reader = new System.IO.StreamReader(inputStream))
        {
            fileTextContents = await reader.ReadToEndAsync();
        }
    }
    async Task ReadCropFile()
    {
        FileStream inputStream = new FileStream("Data/crop.json", FileMode.Open);

        using (var reader = new System.IO.StreamReader(inputStream))
        {
            fileTextContents = await reader.ReadToEndAsync();
        }
    }




    /*string status;

    async Task HandleSelection(IFileListEntry[] files)
    {
        var file = files.FirstOrDefault();
        if (file != null)
        {
            // Just load into .NET memory to show it can be done
            // Alternatively it could be saved to disk, or parsed in memory, or similar
            var ms = new MemoryStream();
            await file.Data.CopyToAsync(ms);

            status = $"Finished loading {file.Size} bytes from {file.Name}";

            var content = new MultipartFormDataContent {
                { new ByteArrayContent(ms.GetBuffer()), "\"upload\"", file.Name }
            };
            await client.PostAsync("upload", content);
        }
    }*/
}